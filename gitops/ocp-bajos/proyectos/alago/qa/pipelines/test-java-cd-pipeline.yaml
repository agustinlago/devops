apiVersion: v1
items:
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: test-java-cd-pipeline
  spec:
    params:
    - default: test
      description: The application deployment name
      name: APP_NAME
      type: string
    - default: ssh://git@10.10.103.100/alago/test.git
      description: The application git repository url
      name: SOURCE_GIT_URL
      type: string
    - default: master
      description: The application git repository revision
      name: SOURCE_GIT_REVISION
      type: string
    - default: test
      description: The subdirectory in the git repository
      name: SOURCE_GIT_CONTEXT_DIR
      type: string
    - default: ""
      description: Maven mirror for Maven Builds
      name: MAVEN_MIRROR_URL
      type: string
    - default: ssh://git@10.10.103.100/DevOps/manifests/alago/test.git
      description: The kustomize git repository url
      name: KUSTOMIZE_GIT_URL
      type: string
    - default: master
      description: The kustomize git repository revision
      name: KUSTOMIZE_GIT_REVISION
      type: string
    - default: /
      description: The subdirectory in the kustomize git repository
      name: KUSTOMIZE_GIT_CONTEXT_DIR
      type: string
    - default: overlays/qa/deployment-patches.yaml
      description: The YAML file in which to patch the image
      name: KUSTOMIZE_GIT_FILE_NAME
      type: string
    - default: 10.10.103.100:8123
      description: External URL for the container registry to set the production image
        from
      name: NEXUS_REGISTRY_URL
      type: string
    - default: alago
      description: Namespace where the buildconfig is located
      name: BASE_PROJECT
      type: string
    results:
    - description: The Image Tag
      name: image-tag
      value: qa-$(tasks.generate-tag.results.image-tag)
    tasks:
    - name: git-clone
      params:
      - name: url
        value: $(params.SOURCE_GIT_URL)
      - name: revision
        value: $(params.SOURCE_GIT_REVISION)
      - name: subdirectory
        value: $(params.SOURCE_GIT_CONTEXT_DIR)
      - name: deleteExisting
        value: "true"
      retries: 2
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
      - name: output
        workspace: app-source
    - name: generate-tag
      retries: 2
      taskRef:
        kind: ClusterTask
        name: generate-tag-custom
    - name: maven-build
      params:
      - name: MAVEN_IMAGE
        value: image-registry.openshift-image-registry.svc:5000/openshift/openjdk-11-rhel8:1.0
      - name: CONTEXT_DIR
        value: ./$(params.SOURCE_GIT_CONTEXT_DIR)
      - name: GOALS
        value:
        - -DskipTests
        - clean
        - compile
        - package
      - name: MAVEN_MIRROR_URL
        value: $(params.MAVEN_MIRROR_URL)
      retries: 3
      runAfter:
      - git-clone
      - generate-tag
      taskRef:
        kind: ClusterTask
        name: maven-custom
      workspaces:
      - name: source
        workspace: app-source
      - name: maven-settings
        workspace: maven-settings
    - name: build-image
      params:
      - name: FROM_DIRECTORY
        value: ./source/$(params.SOURCE_GIT_CONTEXT_DIR)/target
      - name: NAMESPACE
        value: qa-$(params.BASE_PROJECT)
      - name: BUILDCONFIG
        value: $(params.APP_NAME)
      retries: 3
      runAfter:
      - maven-build
      taskRef:
        kind: ClusterTask
        name: s2i-binary-custom
      workspaces:
      - name: source
        workspace: app-source
    - name: tag-image
      params:
      - name: SCRIPT
        value: oc tag qa-$(params.BASE_PROJECT)/$(params.APP_NAME):latest qa-$(params.BASE_PROJECT)/$(params.APP_NAME):$(tasks.generate-tag.results.image-tag)
      retries: 2
      runAfter:
      - build-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: publish-image
      params:
      - name: srcImageURL
        value: docker://image-registry.openshift-image-registry.svc:5000/qa-$(params.BASE_PROJECT)/$(params.APP_NAME):$(tasks.generate-tag.results.image-tag)
      - name: srcTLSverify
        value: "false"
      - name: destImageURL
        value: docker://10.10.103.100:8123/salud/$(params.BASE_PROJECT)/$(params.APP_NAME):$(tasks.generate-tag.results.image-tag)
      - name: destTLSverify
        value: "false"
      retries: 3
      runAfter:
      - tag-image
      taskRef:
        kind: ClusterTask
        name: skopeo-copy
      workspaces:
      - name: images-url
        workspace: images-url
    - name: update-kustomize-repo
      params:
      - name: gitRepositoryUrl
        value: $(params.KUSTOMIZE_GIT_URL)
      - name: gitRepositoryRevision
        value: $(params.KUSTOMIZE_GIT_REVISION)
      - name: gitPath
        value: $(params.KUSTOMIZE_GIT_CONTEXT_DIR)
      - name: fileName
        value: $(params.KUSTOMIZE_GIT_FILE_NAME)
      - name: image
        value: $(params.NEXUS_REGISTRY_URL)/salud/$(params.APP_NAME)
      - name: namespace
        value: qa-$(params.BASE_PROJECT)
      - name: appName
        value: $(params.APP_NAME)
      - name: imageTag
        value: $(tasks.generate-tag.results.image-tag)
      - name: verbose
        value: "true"
      retries: 2
      runAfter:
      - publish-image
      taskRef:
        kind: ClusterTask
        name: update-kustomize-repo-custom
    - name: tag-repo
      params:
      - name: gitRepositoryUrl
        value: $(params.SOURCE_GIT_URL)
      - name: gitRepositoryRevision
        value: $(params.SOURCE_GIT_REVISION)
      - name: gitPath
        value: $(params.SOURCE_GIT_CONTEXT_DIR)
      - name: namespace
        value: qa-$(params.BASE_PROJECT)
      - name: appName
        value: $(params.APP_NAME)
      - name: imageTag
        value: $(tasks.generate-tag.results.image-tag)
      retries: 2
      runAfter:
      - update-kustomize-repo
      taskRef:
        kind: ClusterTask
        name: tag-repo-custom
    workspaces:
    - name: app-source
    - name: maven-settings
    - name: images-url
kind: List
metadata: {}
